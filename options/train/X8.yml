# general settings
name: train_HAT
model_type: HATModel
scale: 8
num_gpu: auto
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: DIV2K
    type: PairedImageDataset
    dataroot_gt: datasets1/DIV2K/train/HR
    dataroot_lq: datasets1/DIV2K/train/X8
    io_backend:
      type: disk
    # name: DF2K
    # type: PairedImageDataset
    # dataroot_gt: datasets/DF2K/HR.lmdb
    # dataroot_lq: datasets/DF2K/X2_sub.lmdb
    # io_backend:
      # type: lmdb

    gt_size: 128
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 32
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  #val_1:
  #  name: CelebA-HQ
  #  type: PairedImageDataset
  #  dataroot_gt: datasets1/Set5/HR
  #  dataroot_lq: datasets1/Set5/X4
  #  io_backend:
   #   type: disk

      
  val_5:
     name: CelebA-HQ
     type: PairedImageDataset
     dataroot_gt: datasets1/celebA-HQ/HR
     dataroot_lq:  datasets1/celebA-HQ/X8
     io_backend:
       type: disk
     
  val_6:
     name: FFHQ
     type: PairedImageDataset
     dataroot_gt: datasets1/ffhq/HR
     dataroot_lq:  datasets1/ffhq/X8
     io_backend:
       type: disk
       
  val_7:
     name: HELEN
     type: PairedImageDataset
     dataroot_gt: datasets1/helen/HR
     dataroot_lq:  datasets1/helen/X8
     io_backend:
       type: disk
       
       
  val_8:
     name: LFW
     type: PairedImageDataset
     dataroot_gt: datasets1/lfw/HR
     dataroot_lq:  datasets1/lfw/X8
     io_backend:
       type: disk

# network structures
network_g:
  type: HAT
  upscale: 8
  in_chans: 3
  img_size: 16
  window_size: 16
  compress_ratio: 3
  squeeze_factor: 30
  conv_scale: 0.01
  overlap_ratio: 0.5
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6,6,6]
  embed_dim: 180
  num_heads: [6, 6, 6, 6, 6, 6,6,6]
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [100000, 200000, 300000, 400000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: 3500
  save_img: False
  pbar: False

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 8
      test_y_channel: true
      better: higher  # the higher, the better. Default: higher
    ssim:
      type: calculate_ssim
      crop_border: 8
      test_y_channel: true
      better: higher  # the higher, the better. Default: higher

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: 3500

  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500